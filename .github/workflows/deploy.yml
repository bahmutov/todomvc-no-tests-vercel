name: deploy
on: deployment_status
jobs:
  trigger-tests-after-deploy:
    # only runs this job on successful deploy
    # https://glebbahmutov.com/blog/develop-preview-test/
    if: github.event.deployment_status.state == 'success'
    runs-on: ubuntu-20.04
    steps:
      # see if there is GITHUB_REF
      - name: Check GITHUB_REF
        run: |
          echo "GITHUB_REF is ${GITHUB_REF}"

      - name: Print all GITHUB variables
        # https://github.com/bahmutov/print-env
        run: npx @bahmutov/print-env GITHUB_

      # to compute the branch name for the deployed commit
      # need to grab the repo
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # trigger CircleCI pipeline to run E2E tests
      # https://circleci.com/docs/api/v2/#operation/triggerPipeline
      # trigger the run on the given branch first
      # if the branch does not exist, try the default branch
      # https://github.com/bahmutov/trigger-circleci-pipeline
      - name: Trigger CircleCI
        run: |
          echo "Vercel unique deployment URL is ${{ github.event.deployment_status.target_url }}"

          echo "Deployed commit ${{ github.sha }}"
          export BRANCH_NAME=$(git show -s --pretty=%D HEAD | tr -s ',' '\n' | sed 's/^ //' | grep -e 'origin/' | head -1 | sed 's/\origin\///g')
          echo "Deployed branch ${BRANCH_NAME}"

          export TEST_URL=${{ github.event.deployment_status.target_url }}

          npx trigger-circleci-pipeline \
            --org bahmutov --project todomvc-tests-circleci --branch ${BRANCH_NAME} \
            --parameters TEST_URL=${TEST_URL},TEST_BRANCH=${BRANCH_NAME}
        env:
          CIRCLE_CI_API_TOKEN: ${{ secrets.CIRCLE_CI_API_TOKEN }}
